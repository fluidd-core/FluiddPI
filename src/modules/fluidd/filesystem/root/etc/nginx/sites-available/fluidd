upstream apiserver {
    ip_hash;
    server 127.0.0.1:7125;
}

upstream mjpgstreamer1 {
    ip_hash;
    server 127.0.0.1:8080;
}

server {
    server_name _;
    listen 80;
    listen [::]:80;
    access_log /var/log/nginx/access.log vhost;
## Enable https
#    return 301 https://$host$request_uri;
#}
#
#server {
#    server_name _;
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    access_log /var/log/nginx/access.log vhost;
#    ssl_protocols TLSv1.1 TLSv1.2;
#    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;
#    ssl_prefer_server_ciphers on;
#    ssl_session_timeout 5m;
#    ssl_session_cache shared:SSL:50m;
#    ssl_certificate /etc/nginx/certs/fluidd.crt;
#    ssl_certificate_key /etc/nginx/certs/fluidd.key;
#    add_header Strict-Transport-Security "max-age=31536000";
#    add_header X-Frame-Options "SAMEORIGIN";

    # web_path from fluidd static files
    root /home/pi/fluidd;

    index index.html;

    # disable max upload size checks
    client_max_body_size 0;

    # disable proxy request buffering
    proxy_request_buffering off;

    location / {
        try_files $uri $uri/ /index.html;
    }

    location = /index.html {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    location /websocket {
        proxy_pass http://apiserver/websocket;
        proxy_read_timeout 86400;
    }

    location ~ ^/(printer|api|access|machine|server)/ {
        proxy_pass http://apiserver$request_uri;
    }

    location /webcam/ {
        proxy_pass http://mjpgstreamer1/;
    }
}

